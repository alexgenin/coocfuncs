// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cont_overlap_core
arma::mat cont_overlap_core(arma::uword N, arma::uword Nsp, arma::vec& xis, arma::vec& xes, arma::uvec& attributs, arma::uvec& transectid, double tol);
RcppExport SEXP _coocfuncs_cont_overlap_core(SEXP NSEXP, SEXP NspSEXP, SEXP xisSEXP, SEXP xesSEXP, SEXP attributsSEXP, SEXP transectidSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uword >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::uword >::type Nsp(NspSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type xis(xisSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type xes(xesSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type attributs(attributsSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type transectid(transectidSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(cont_overlap_core(N, Nsp, xis, xes, attributs, transectid, tol));
    return rcpp_result_gen;
END_RCPP
}
// bin_data_core
arma::umat bin_data_core(arma::vec xis, arma::vec xes, arma::uvec spp, arma::vec bins, double binsize);
RcppExport SEXP _coocfuncs_bin_data_core(SEXP xisSEXP, SEXP xesSEXP, SEXP sppSEXP, SEXP binsSEXP, SEXP binsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type xis(xisSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xes(xesSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type spp(sppSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bins(binsSEXP);
    Rcpp::traits::input_parameter< double >::type binsize(binsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(bin_data_core(xis, xes, spp, bins, binsize));
    return rcpp_result_gen;
END_RCPP
}
// sample_transect_core
arma::mat sample_transect_core(int N, arma::vec xis, arma::vec xes, arma::uvec spp, arma::uvec groups, double xmax, double binsize);
RcppExport SEXP _coocfuncs_sample_transect_core(SEXP NSEXP, SEXP xisSEXP, SEXP xesSEXP, SEXP sppSEXP, SEXP groupsSEXP, SEXP xmaxSEXP, SEXP binsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xis(xisSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xes(xesSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type spp(sppSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    Rcpp::traits::input_parameter< double >::type binsize(binsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_transect_core(N, xis, xes, spp, groups, xmax, binsize));
    return rcpp_result_gen;
END_RCPP
}
// overlap
double overlap(double xi_i, double xi_j, double xe_i, double xe_j);
RcppExport SEXP _coocfuncs_overlap(SEXP xi_iSEXP, SEXP xi_jSEXP, SEXP xe_iSEXP, SEXP xe_jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type xi_i(xi_iSEXP);
    Rcpp::traits::input_parameter< double >::type xi_j(xi_jSEXP);
    Rcpp::traits::input_parameter< double >::type xe_i(xe_iSEXP);
    Rcpp::traits::input_parameter< double >::type xe_j(xe_jSEXP);
    rcpp_result_gen = Rcpp::wrap(overlap(xi_i, xi_j, xe_i, xe_j));
    return rcpp_result_gen;
END_RCPP
}
// overlap_binary
double overlap_binary(double istart, double iend, double jstart, double jend);
RcppExport SEXP _coocfuncs_overlap_binary(SEXP istartSEXP, SEXP iendSEXP, SEXP jstartSEXP, SEXP jendSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type istart(istartSEXP);
    Rcpp::traits::input_parameter< double >::type iend(iendSEXP);
    Rcpp::traits::input_parameter< double >::type jstart(jstartSEXP);
    Rcpp::traits::input_parameter< double >::type jend(jendSEXP);
    rcpp_result_gen = Rcpp::wrap(overlap_binary(istart, iend, jstart, jend));
    return rcpp_result_gen;
END_RCPP
}
// randp
double randp();
RcppExport SEXP _coocfuncs_randp() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(randp());
    return rcpp_result_gen;
END_RCPP
}
// shuffle_core
arma::mat shuffle_core(arma::mat& xs, double xmax);
RcppExport SEXP _coocfuncs_shuffle_core(SEXP xsSEXP, SEXP xmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(shuffle_core(xs, xmax));
    return rcpp_result_gen;
END_RCPP
}
// get_cover
double get_cover(arma::mat& xs, double xmax);
RcppExport SEXP _coocfuncs_get_cover(SEXP xsSEXP, SEXP xmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type xs(xsSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(get_cover(xs, xmax));
    return rcpp_result_gen;
END_RCPP
}
// trans_cover
double trans_cover(arma::vec& xis, arma::vec& xes, double xmax);
RcppExport SEXP _coocfuncs_trans_cover(SEXP xisSEXP, SEXP xesSEXP, SEXP xmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type xis(xisSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type xes(xesSEXP);
    Rcpp::traits::input_parameter< double >::type xmax(xmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(trans_cover(xis, xes, xmax));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_coocfuncs_cont_overlap_core", (DL_FUNC) &_coocfuncs_cont_overlap_core, 7},
    {"_coocfuncs_bin_data_core", (DL_FUNC) &_coocfuncs_bin_data_core, 5},
    {"_coocfuncs_sample_transect_core", (DL_FUNC) &_coocfuncs_sample_transect_core, 7},
    {"_coocfuncs_overlap", (DL_FUNC) &_coocfuncs_overlap, 4},
    {"_coocfuncs_overlap_binary", (DL_FUNC) &_coocfuncs_overlap_binary, 4},
    {"_coocfuncs_randp", (DL_FUNC) &_coocfuncs_randp, 0},
    {"_coocfuncs_shuffle_core", (DL_FUNC) &_coocfuncs_shuffle_core, 2},
    {"_coocfuncs_get_cover", (DL_FUNC) &_coocfuncs_get_cover, 2},
    {"_coocfuncs_trans_cover", (DL_FUNC) &_coocfuncs_trans_cover, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_coocfuncs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
